{"version":3,"sources":["common/images/orange.png","utils/webStorage.js","useReducer/index.js","utils/lunarCalendar.js","components/weather/index.js","components/dayMemo/index.js","components/calendar/index.js","components/footer/index.js","components/memoItem/index.js","views/memo/index.js","views/addMemo/index.js","views/app/index.js","index.js"],"names":["module","exports","Store","$store","webStorage","Error","this","storage","window","localStorage","sessionStorage","getItem","key","JSON","parse","setItem","val","stringify","removeItem","hasOwnProperty","state","message","clear","initData","icons","icon","faStar","text","faBirthdayCake","faBell","faCertificate","memoData","selectedDate","reducer","action","type","newItem","data","push","changeItem","item","itemIndex","forEach","index","id","isFinished","deleteItem","deleteItemIndex","splice","filter","arrItem","memoDataItem","ContextData","createContext","calendar","lunarInfo","solarMonth","Gan","Zhi","Animals","solarTerm","sTermInfo","nStr1","nStr2","nStr3","lYearDays","y","i","sum","leapDays","leapMonth","monthDays","m","solarDays","ms","toGanZhiYear","lYear","ganKey","zhiKey","toAstro","cMonth","cDay","substr","toGanZhi","offset","getTerm","n","_table","_info","parseInt","toString","_calday","toChinaMonth","s","toChinaDay","d","Math","floor","getAnimal","solar2lunar","objDate","Date","temp","getFullYear","getMonth","getDate","UTC","isTodayObj","isToday","nWeek","getDay","cWeek","year","leap","isLeap","month","day","sm","gzY","firstNode","secondNode","gzM","isTerm","Term","dayCyclical","gzD","astro","lunar2solar","isLeapMonth","_day","isAdd","stmap","calObj","cY","getUTCFullYear","cM","getUTCMonth","cD","getUTCDate","Weather","props","useState","date","setDate","locationWeather","setLocationWeather","useEffect","getLocation","AMap","plugin","CitySearch","getLocalCity","status","result","info","getWeather","adcode","getLive","err","className","lunar","slice","indexOf","temperature","weather","province","city","withRouter","useContext","dispatch","memos","map","dateStart","getHours","getMinutes","dateEnd","defaultChecked","onChange","htmlFor","Array","itemsArr","setItemsArr","setYear","setMonth","setDay","week","setWeek","monthStartIndex","setMonthStartIndex","selectDay","setSelectDay","isShow","setIsShow","animateState","setAnimateState","resultDate","setResultDate","memoArr","setMemoArr","weeks","lastMonthDays","weekStart","fillDate","showLunarDay","changeItemH","findMark","Object","assign","solar","times","getTime","howMuchMemo","setTimeout","items","from","document","getElementsByClassName","itemW","getComputedStyle","width","el","style","height","arr","itemYear","itemMonth","itemDay","dayItem","e","unshift","j","nowMonthStartIndex","length","includes","undefined","k","nextMonthStartIndex","nextMonthLength","num","isNowYear","isNowMonth","isNowDay","readyMonth","diffMonth","resultObj","GetLunarDay","gzYear","Animal","gzMonth","gzDay","IMonthCn","IDayCn","changeMonth","newMonth","newYear","itemDate","size","inline","backgroundColor","color","onClick","mode","value","changeDate","display","selectMonthDay","lastIndexOf","sliceLunar","Footer","locationPath","setLocationPath","lists","path","faHome","faBookmark","location","pathname","jumpPage","href","origin","alert","Modal","MemoItem","setMemoData","sortMemoData","middle","reverse","newMemoData","categoiresMemoData","_categoiresMemoData","onPress","_memoDataItem","_index","Toast","success","_item","tagIndex","dateStartHours","dateStartMinutes","padStart","dateEndtHours","dateEndtMinutes","formatDate","faTrash","deleteMemo","Memo","onLeftClick","history","AddMemo","setDateStart","setDateEnd","selectedIndex","setSelectedIndex","inputVal","setInputVal","initDateEnd","flag","dateStartTimes","dateEndTimes","changeInputVal","placeholder","Item","arrow","_date","test","addData","App","useReducer","Provider","src","require","alt","exact","component","Calender","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d498f709.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orange.f8456837.png\";","function Store(webStorage) {\r\n    if (webStorage !== \"localStorage\" && webStorage !== \"sessionStorage\") {\r\n        throw new Error(` invalid parameter, parameter should be localStorage or sessionStorage`);\r\n    }\r\n    this.storage = webStorage === \"localStorage\" ? window.localStorage : window.sessionStorage;\r\n\r\n    /**\r\n     * 获取数据\r\n     * @param {String} key  要获取的key值的数据\r\n     */\r\n    this.getItem = function (key) {\r\n        return JSON.parse(this.storage.getItem(key));\r\n    }\r\n\r\n    /**\r\n     * 新建数据\r\n     * @param {String} key  要新建的数据的key值\r\n     * @param {String} val  要新建的数据的value值\r\n     */\r\n    this.setItem = function (key, val) {\r\n        return this.storage.setItem(key, JSON.stringify(val));\r\n    }\r\n\r\n    /**\r\n     * 删除某一项数据\r\n     * @param {String} key 要删除key值的数据\r\n     */\r\n    this.removeItem = function (key) {\r\n        if (!this.storage.hasOwnProperty(key)) {\r\n            return {\r\n                state: 1,\r\n                message: `删除失败，没有${key}字段`\r\n            };\r\n        }\r\n        this.storage.removeItem(key);\r\n        return {\r\n            state: 0,\r\n            message: \"删除成功\"\r\n        }\r\n    }\r\n\r\n    // 清除所有数据\r\n    this.clear = function () {\r\n        this.storage.clear();\r\n    }\r\n}\r\nexport default Store;","import { createContext } from \"react\";\r\nimport { faBirthdayCake, faStar, faCertificate, faBell } from '@fortawesome/fontawesome-free-solid';\r\nimport Store from \"../utils/webStorage.js\"; //引入webStorage工具\r\n\r\nconst $store = new Store(\"localStorage\");//实例化Store\r\nconst initData = {};//初始数据\r\n//icon图标数据\r\ninitData.icons = [\r\n    {\r\n        icon: faStar,\r\n        text: \"日程\"\r\n    },\r\n    {\r\n        icon: faBirthdayCake,\r\n        text: \"生日\"\r\n    },\r\n    {\r\n        icon: faBell,\r\n        text: \"纪念日\"\r\n    },\r\n    {\r\n        icon: faCertificate,\r\n        text: \"其他\"\r\n    }];\r\n\r\n// 备忘录数据\r\ninitData.memoData = $store.getItem(\"memoData\")\r\n    ? $store.getItem(\"memoData\")\r\n    : [];\r\n\r\n// 选中的时间\r\ninitData.selectedDate = $store.getItem(\"selectedDate\")\r\n    ? $store.getItem(\"selectedDate\")\r\n    : {};\r\n\r\n// 派发事件\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        // 添加备忘录\r\n        case \"add\":\r\n            let newItem = action.data;\r\n            state.memoData.push(newItem);\r\n            $store.setItem(\"memoData\", state.memoData);\r\n            return { ...state }\r\n\r\n        // 更新选中的日期\r\n        case \"updateDate\":\r\n            state.selectedDate = action.data;\r\n            $store.setItem(\"selectedDate\", state.selectedDate);\r\n            return { ...state }\r\n\r\n        // 改变备忘录完成状态\r\n        case \"changeIsFinish\":\r\n            let changeItem = action.data.item; //要修改的数据\r\n            let itemIndex = 0;\r\n            // 找到要修改的数据的下标值，并赋值给itemIndex\r\n            state.memoData.forEach((item, index) => {\r\n                if (item.id === changeItem.id) {\r\n                    itemIndex = index;\r\n                }\r\n            })\r\n            changeItem.isFinished = !changeItem.isFinished;\r\n            state.memoData[itemIndex] = changeItem;\r\n            $store.setItem(\"memoData\", [...state.memoData]);\r\n            return { ...state }\r\n\r\n        // 删除memoData中的其中一条数据\r\n        case \"deleteMemoItem\":\r\n            let deleteItem = action.data.item; //要删除的数据\r\n            let deleteItemIndex = 0;\r\n            // 找到要删除的数据的下标值，并赋值给deleteItemIndex\r\n            state.memoData.forEach((item, index) => {\r\n                if (item.id === deleteItem.id) {\r\n                    deleteItemIndex = index;\r\n                }\r\n            })\r\n            state.memoData.splice(deleteItemIndex, 1);\r\n            $store.setItem(\"memoData\", [...state.memoData]);\r\n            return { ...state }\r\n\r\n        // 删除memoData中每个子元素中isFinished为true的备忘录，也就是说删除所有已完成的备忘录\r\n        case \"deleteAllDone\":\r\n            let arr = state.memoData.filter(item => {\r\n                return item.isFinished === true;\r\n            })\r\n            arr.forEach(arrItem => {\r\n                state.memoData.forEach((memoDataItem, index) => {\r\n                    if (arrItem.id === memoDataItem.id) {\r\n                        state.memoData.splice(index, 1);\r\n                    }\r\n                })\r\n            })\r\n            $store.setItem(\"memoData\", [...state.memoData]);\r\n            return { ...state }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ContextData = createContext({});\r\n\r\nexport { initData, reducer, ContextData }","/**\r\n* @1900-2100区间内的公历、农历互转\r\n* @charset UTF-8\r\n* @Author Jea杨(JJonline@JJonline.Cn)\r\n* @Time  2014-7-21\r\n* @Time  2016-8-13 Fixed 2033hex、Attribution Annals\r\n* @Time  2016-9-25 Fixed lunar LeapMonth Param Bug\r\n* @Version 1.0.2\r\n* @公历转农历：calendar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]\r\n* @农历转公历：calendar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]\r\n*/\r\nvar calendar = {\r\n    /**\r\n     * 农历1900-2100的润大小信息表\r\n     * @Array Of Property\r\n     * @return Hex\r\n     */\r\n    lunarInfo:[0x04bd8,0x04ae0,0x0a570,0x054d5,0x0d260,0x0d950,0x16554,0x056a0,0x09ad0,0x055d2,//1900-1909\r\n        0x04ae0,0x0a5b6,0x0a4d0,0x0d250,0x1d255,0x0b540,0x0d6a0,0x0ada2,0x095b0,0x14977,//1910-1919\r\n        0x04970,0x0a4b0,0x0b4b5,0x06a50,0x06d40,0x1ab54,0x02b60,0x09570,0x052f2,0x04970,//1920-1929\r\n        0x06566,0x0d4a0,0x0ea50,0x06e95,0x05ad0,0x02b60,0x186e3,0x092e0,0x1c8d7,0x0c950,//1930-1939\r\n        0x0d4a0,0x1d8a6,0x0b550,0x056a0,0x1a5b4,0x025d0,0x092d0,0x0d2b2,0x0a950,0x0b557,//1940-1949\r\n        0x06ca0,0x0b550,0x15355,0x04da0,0x0a5b0,0x14573,0x052b0,0x0a9a8,0x0e950,0x06aa0,//1950-1959\r\n        0x0aea6,0x0ab50,0x04b60,0x0aae4,0x0a570,0x05260,0x0f263,0x0d950,0x05b57,0x056a0,//1960-1969\r\n        0x096d0,0x04dd5,0x04ad0,0x0a4d0,0x0d4d4,0x0d250,0x0d558,0x0b540,0x0b6a0,0x195a6,//1970-1979\r\n        0x095b0,0x049b0,0x0a974,0x0a4b0,0x0b27a,0x06a50,0x06d40,0x0af46,0x0ab60,0x09570,//1980-1989\r\n        0x04af5,0x04970,0x064b0,0x074a3,0x0ea50,0x06b58,0x055c0,0x0ab60,0x096d5,0x092e0,//1990-1999\r\n        0x0c960,0x0d954,0x0d4a0,0x0da50,0x07552,0x056a0,0x0abb7,0x025d0,0x092d0,0x0cab5,//2000-2009\r\n        0x0a950,0x0b4a0,0x0baa4,0x0ad50,0x055d9,0x04ba0,0x0a5b0,0x15176,0x052b0,0x0a930,//2010-2019\r\n        0x07954,0x06aa0,0x0ad50,0x05b52,0x04b60,0x0a6e6,0x0a4e0,0x0d260,0x0ea65,0x0d530,//2020-2029\r\n        0x05aa0,0x076a3,0x096d0,0x04afb,0x04ad0,0x0a4d0,0x1d0b6,0x0d250,0x0d520,0x0dd45,//2030-2039\r\n        0x0b5a0,0x056d0,0x055b2,0x049b0,0x0a577,0x0a4b0,0x0aa50,0x1b255,0x06d20,0x0ada0,//2040-2049\r\n        /**Add By JJonline@JJonline.Cn**/\r\n        0x14b63,0x09370,0x049f8,0x04970,0x064b0,0x168a6,0x0ea50, 0x06b20,0x1a6c4,0x0aae0,//2050-2059\r\n        0x0a2e0,0x0d2e3,0x0c960,0x0d557,0x0d4a0,0x0da50,0x05d55,0x056a0,0x0a6d0,0x055d4,//2060-2069\r\n        0x052d0,0x0a9b8,0x0a950,0x0b4a0,0x0b6a6,0x0ad50,0x055a0,0x0aba4,0x0a5b0,0x052b0,//2070-2079\r\n        0x0b273,0x06930,0x07337,0x06aa0,0x0ad50,0x14b55,0x04b60,0x0a570,0x054e4,0x0d160,//2080-2089\r\n        0x0e968,0x0d520,0x0daa0,0x16aa6,0x056d0,0x04ae0,0x0a9d4,0x0a2d0,0x0d150,0x0f252,//2090-2099\r\n        0x0d520],//2100\r\n    /**\r\n     * 公历每个月份的天数普通表\r\n     * @Array Of Property\r\n     * @return Number\r\n     */\r\n    solarMonth:[31,28,31,30,31,30,31,31,30,31,30,31],\r\n    /**\r\n     * 天干地支之天干速查表\r\n     * @Array Of Property trans[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"]\r\n     * @return Cn string\r\n     */\r\n    Gan:[\"\\u7532\",\"\\u4e59\",\"\\u4e19\",\"\\u4e01\",\"\\u620a\",\"\\u5df1\",\"\\u5e9a\",\"\\u8f9b\",\"\\u58ec\",\"\\u7678\"],\r\n    /**\r\n     * 天干地支之地支速查表\r\n     * @Array Of Property\r\n     * @trans[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"]\r\n     * @return Cn string\r\n     */\r\n    Zhi:[\"\\u5b50\",\"\\u4e11\",\"\\u5bc5\",\"\\u536f\",\"\\u8fb0\",\"\\u5df3\",\"\\u5348\",\"\\u672a\",\"\\u7533\",\"\\u9149\",\"\\u620c\",\"\\u4ea5\"],\r\n    /**\r\n     * 天干地支之地支速查表<=>生肖\r\n     * @Array Of Property\r\n     * @trans[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"]\r\n     * @return Cn string\r\n     */\r\n    Animals:[\"\\u9f20\",\"\\u725b\",\"\\u864e\",\"\\u5154\",\"\\u9f99\",\"\\u86c7\",\"\\u9a6c\",\"\\u7f8a\",\"\\u7334\",\"\\u9e21\",\"\\u72d7\",\"\\u732a\"],\r\n    /**\r\n     * 24节气速查表\r\n     * @Array Of Property\r\n     * @trans[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"]\r\n     * @return Cn string\r\n     */\r\n    solarTerm:[\"\\u5c0f\\u5bd2\",\"\\u5927\\u5bd2\",\"\\u7acb\\u6625\",\"\\u96e8\\u6c34\",\"\\u60ca\\u86f0\",\"\\u6625\\u5206\",\"\\u6e05\\u660e\",\"\\u8c37\\u96e8\",\"\\u7acb\\u590f\",\"\\u5c0f\\u6ee1\",\"\\u8292\\u79cd\",\"\\u590f\\u81f3\",\"\\u5c0f\\u6691\",\"\\u5927\\u6691\",\"\\u7acb\\u79cb\",\"\\u5904\\u6691\",\"\\u767d\\u9732\",\"\\u79cb\\u5206\",\"\\u5bd2\\u9732\",\"\\u971c\\u964d\",\"\\u7acb\\u51ac\",\"\\u5c0f\\u96ea\",\"\\u5927\\u96ea\",\"\\u51ac\\u81f3\"],\r\n    /**\r\n     * 1900-2100各年的24节气日期速查表\r\n     * @Array Of Property\r\n     * @return 0x string For splice\r\n     */\r\n    sTermInfo:['9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e','97bcf97c3598082c95f8c965cc920f',\r\n         '97bd0b06bdb0722c965ce1cfcc920f','b027097bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\r\n         '97bcf97c359801ec95f8c965cc920f','97bd0b06bdb0722c965ce1cfcc920f','b027097bd097c36b0b6fc9274c91aa',\r\n         '97b6b97bd19801ec9210c965cc920e','97bcf97c359801ec95f8c965cc920f','97bd0b06bdb0722c965ce1cfcc920f',\r\n         'b027097bd097c36b0b6fc9274c91aa','9778397bd19801ec9210c965cc920e','97b6b97bd19801ec95f8c965cc920f',\r\n         '97bd09801d98082c95f8e1cfcc920f','97bd097bd097c36b0b6fc9210c8dc2','9778397bd197c36c9210c9274c91aa',\r\n         '97b6b97bd19801ec95f8c965cc920e','97bd09801d98082c95f8e1cfcc920f','97bd097bd097c36b0b6fc9210c8dc2',\r\n         '9778397bd097c36c9210c9274c91aa','97b6b97bd19801ec95f8c965cc920e','97bcf97c3598082c95f8e1cfcc920f',\r\n         '97bd097bd097c36b0b6fc9210c8dc2','9778397bd097c36c9210c9274c91aa','97b6b97bd19801ec9210c965cc920e',\r\n         '97bcf97c3598082c95f8c965cc920f','97bd097bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\r\n         '97b6b97bd19801ec9210c965cc920e','97bcf97c3598082c95f8c965cc920f','97bd097bd097c35b0b6fc920fb0722',\r\n         '9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e','97bcf97c359801ec95f8c965cc920f',\r\n         '97bd097bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\r\n         '97bcf97c359801ec95f8c965cc920f','97bd097bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\r\n         '97b6b97bd19801ec9210c965cc920e','97bcf97c359801ec95f8c965cc920f','97bd097bd07f595b0b6fc920fb0722',\r\n         '9778397bd097c36b0b6fc9210c8dc2','9778397bd19801ec9210c9274c920e','97b6b97bd19801ec95f8c965cc920f',\r\n         '97bd07f5307f595b0b0bc920fb0722','7f0e397bd097c36b0b6fc9210c8dc2','9778397bd097c36c9210c9274c920e',\r\n         '97b6b97bd19801ec95f8c965cc920f','97bd07f5307f595b0b0bc920fb0722','7f0e397bd097c36b0b6fc9210c8dc2',\r\n         '9778397bd097c36c9210c9274c91aa','97b6b97bd19801ec9210c965cc920e','97bd07f1487f595b0b0bc920fb0722',\r\n         '7f0e397bd097c36b0b6fc9210c8dc2','9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\r\n         '97bcf7f1487f595b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\r\n         '97b6b97bd19801ec9210c965cc920e','97bcf7f1487f595b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722',\r\n         '9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e','97bcf7f1487f531b0b0bb0b6fb0722',\r\n         '7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\r\n         '97bcf7f1487f531b0b0bb0b6fb0722','7f0e397bd07f595b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\r\n         '97b6b97bd19801ec9210c9274c920e','97bcf7f0e47f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722',\r\n         '9778397bd097c36b0b6fc9210c91aa','97b6b97bd197c36c9210c9274c920e','97bcf7f0e47f531b0b0bb0b6fb0722',\r\n         '7f0e397bd07f595b0b0bc920fb0722','9778397bd097c36b0b6fc9210c8dc2','9778397bd097c36c9210c9274c920e',\r\n         '97b6b7f0e47f531b0723b0b6fb0722','7f0e37f5307f595b0b0bc920fb0722','7f0e397bd097c36b0b6fc9210c8dc2',\r\n         '9778397bd097c36b0b70c9274c91aa','97b6b7f0e47f531b0723b0b6fb0721','7f0e37f1487f595b0b0bb0b6fb0722',\r\n         '7f0e397bd097c35b0b6fc9210c8dc2','9778397bd097c36b0b6fc9274c91aa','97b6b7f0e47f531b0723b0b6fb0721',\r\n         '7f0e27f1487f595b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\r\n         '97b6b7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722',\r\n         '9778397bd097c36b0b6fc9274c91aa','97b6b7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722',\r\n         '7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa','97b6b7f0e47f531b0723b0b6fb0721',\r\n         '7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722','9778397bd097c36b0b6fc9274c91aa',\r\n         '97b6b7f0e47f531b0723b0787b0721','7f0e27f0e47f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722',\r\n         '9778397bd097c36b0b6fc9210c91aa','97b6b7f0e47f149b0723b0787b0721','7f0e27f0e47f531b0723b0b6fb0722',\r\n         '7f0e397bd07f595b0b0bc920fb0722','9778397bd097c36b0b6fc9210c8dc2','977837f0e37f149b0723b0787b0721',\r\n         '7f07e7f0e47f531b0723b0b6fb0722','7f0e37f5307f595b0b0bc920fb0722','7f0e397bd097c35b0b6fc9210c8dc2',\r\n         '977837f0e37f14998082b0787b0721','7f07e7f0e47f531b0723b0b6fb0721','7f0e37f1487f595b0b0bb0b6fb0722',\r\n         '7f0e397bd097c35b0b6fc9210c8dc2','977837f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\r\n         '7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722','977837f0e37f14998082b0787b06bd',\r\n         '7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722',\r\n         '977837f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722',\r\n         '7f0e397bd07f595b0b0bc920fb0722','977837f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\r\n         '7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722','977837f0e37f14998082b0787b06bd',\r\n         '7f07e7f0e47f149b0723b0787b0721','7f0e27f0e47f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722',\r\n         '977837f0e37f14998082b0723b06bd','7f07e7f0e37f149b0723b0787b0721','7f0e27f0e47f531b0723b0b6fb0722',\r\n         '7f0e397bd07f595b0b0bc920fb0722','977837f0e37f14898082b0723b02d5','7ec967f0e37f14998082b0787b0721',\r\n         '7f07e7f0e47f531b0723b0b6fb0722','7f0e37f1487f595b0b0bb0b6fb0722','7f0e37f0e37f14898082b0723b02d5',\r\n         '7ec967f0e37f14998082b0787b0721','7f07e7f0e47f531b0723b0b6fb0722','7f0e37f1487f531b0b0bb0b6fb0722',\r\n         '7f0e37f0e37f14898082b0723b02d5','7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\r\n         '7f0e37f1487f531b0b0bb0b6fb0722','7f0e37f0e37f14898082b072297c35','7ec967f0e37f14998082b0787b06bd',\r\n         '7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722','7f0e37f0e37f14898082b072297c35',\r\n         '7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722',\r\n         '7f0e37f0e366aa89801eb072297c35','7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f149b0723b0787b0721',\r\n         '7f0e27f1487f531b0b0bb0b6fb0722','7f0e37f0e366aa89801eb072297c35','7ec967f0e37f14998082b0723b06bd',\r\n         '7f07e7f0e47f149b0723b0787b0721','7f0e27f0e47f531b0723b0b6fb0722','7f0e37f0e366aa89801eb072297c35',\r\n         '7ec967f0e37f14998082b0723b06bd','7f07e7f0e37f14998083b0787b0721','7f0e27f0e47f531b0723b0b6fb0722',\r\n         '7f0e37f0e366aa89801eb072297c35','7ec967f0e37f14898082b0723b02d5','7f07e7f0e37f14998082b0787b0721',\r\n         '7f07e7f0e47f531b0723b0b6fb0722','7f0e36665b66aa89801e9808297c35','665f67f0e37f14898082b0723b02d5',\r\n         '7ec967f0e37f14998082b0787b0721','7f07e7f0e47f531b0723b0b6fb0722','7f0e36665b66a449801e9808297c35',\r\n         '665f67f0e37f14898082b0723b02d5','7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\r\n         '7f0e36665b66a449801e9808297c35','665f67f0e37f14898082b072297c35','7ec967f0e37f14998082b0787b06bd',\r\n         '7f07e7f0e47f531b0723b0b6fb0721','7f0e26665b66a449801e9808297c35','665f67f0e37f1489801eb072297c35',\r\n         '7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722'],\r\n    /**\r\n     * 数字转中文速查表\r\n     * @Array Of Property\r\n     * @trans ['日','一','二','三','四','五','六','七','八','九','十']\r\n     * @return Cn string\r\n     */\r\n    nStr1:[\"\\u65e5\",\"\\u4e00\",\"\\u4e8c\",\"\\u4e09\",\"\\u56db\",\"\\u4e94\",\"\\u516d\",\"\\u4e03\",\"\\u516b\",\"\\u4e5d\",\"\\u5341\"],\r\n    /**\r\n     * 日期转农历称呼速查表\r\n     * @Array Of Property\r\n     * @trans ['初','十','廿','卅']\r\n     * @return Cn string\r\n     */\r\n    nStr2:[\"\\u521d\",\"\\u5341\",\"\\u5eff\",\"\\u5345\"],\r\n    /**\r\n     * 月份转农历称呼速查表\r\n     * @Array Of Property\r\n     * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']\r\n     * @return Cn string\r\n     */\r\n    nStr3:[\"\\u6b63\",\"\\u4e8c\",\"\\u4e09\",\"\\u56db\",\"\\u4e94\",\"\\u516d\",\"\\u4e03\",\"\\u516b\",\"\\u4e5d\",\"\\u5341\",\"\\u51ac\",\"\\u814a\"],\r\n    /**\r\n     * 返回农历y年一整年的总天数\r\n     * @param lunar Year\r\n     * @return Number\r\n     * @eg:var count = calendar.lYearDays(1987) ;//count=387\r\n     */\r\n    lYearDays:function(y) {\r\n      var i, sum = 348;\r\n      for(i=0x8000; i>0x8; i>>=1) { sum += (calendar.lunarInfo[y-1900] & i)? 1: 0; }\r\n      return(sum+calendar.leapDays(y));\r\n    },\r\n    /**\r\n     * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\r\n     * @param lunar Year\r\n     * @return Number (0-12)\r\n     * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6\r\n     */\r\n    leapMonth:function(y) { //闰字编码 \\u95f0\r\n      return(calendar.lunarInfo[y-1900] & 0xf);\r\n    },\r\n    /**\r\n     * 返回农历y年闰月的天数 若该年没有闰月则返回0\r\n     * @param lunar Year\r\n     * @return Number (0、29、30)\r\n     * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29\r\n     */\r\n    leapDays:function(y) {\r\n      if(calendar.leapMonth(y)) {\r\n        return((calendar.lunarInfo[y-1900] & 0x10000)? 30: 29);\r\n      }\r\n      return(0);\r\n    },\r\n    /**\r\n     * 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法\r\n     * @param lunar Year\r\n     * @return Number (-1、29、30)\r\n     * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29\r\n     */\r\n    monthDays:function(y,m) {\r\n      if(m>12 || m<1) {return -1}//月份参数从1至12，参数错误返回-1\r\n      return( (calendar.lunarInfo[y-1900] & (0x10000>>m))? 30: 29 );\r\n    },\r\n    /**\r\n     * 返回公历(!)y年m月的天数\r\n     * @param solar Year\r\n     * @return Number (-1、28、29、30、31)\r\n     * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30\r\n     */\r\n    solarDays:function(y,m) {\r\n      if(m>12 || m<1) {return -1} //若参数错误 返回-1\r\n      var ms = m-1;\r\n      if(ms===1) { //2月份的闰平规律测算后确认返回28或29\r\n        return(((y%4 === 0) && (y%100 !== 0) || (y%400 === 0))? 29: 28);\r\n      }else {\r\n        return(calendar.solarMonth[ms]);\r\n      }\r\n    },\r\n    /**\r\n     * 农历年份转换为干支纪年\r\n     * @param lYear 农历年的年份数\r\n     * @return Cn string\r\n     */\r\n    toGanZhiYear:function(lYear) {\r\n      var ganKey = (lYear - 3) % 10;\r\n      var zhiKey = (lYear - 3) % 12;\r\n      if(ganKey === 0) ganKey = 10;//如果余数为0则为最后一个天干\r\n      if(zhiKey === 0) zhiKey = 12;//如果余数为0则为最后一个地支\r\n      return calendar.Gan[ganKey-1] + calendar.Zhi[zhiKey-1];\r\n    },\r\n    /**\r\n     * 公历月、日判断所属星座\r\n     * @param cMonth [description]\r\n     * @param cDay [description]\r\n     * @return Cn string\r\n     */\r\n    toAstro:function(cMonth,cDay) {\r\n      var s  = \"\\u9b54\\u7faf\\u6c34\\u74f6\\u53cc\\u9c7c\\u767d\\u7f8a\\u91d1\\u725b\\u53cc\\u5b50\\u5de8\\u87f9\\u72ee\\u5b50\\u5904\\u5973\\u5929\\u79e4\\u5929\\u874e\\u5c04\\u624b\\u9b54\\u7faf\";\r\n      var arr = [20,19,21,21,21,22,23,23,23,23,22,22];\r\n      return s.substr(cMonth*2 - (cDay < arr[cMonth-1] ? 2 : 0),2) + \"\\u5ea7\";//座\r\n    },\r\n    /**\r\n     * 传入offset偏移量返回干支\r\n     * @param offset 相对甲子的偏移量\r\n     * @return Cn string\r\n     */\r\n    toGanZhi:function(offset) {\r\n      return calendar.Gan[offset%10] + calendar.Zhi[offset%12];\r\n    },\r\n    /**\r\n     * 传入公历(!)y年获得该年第n个节气的公历日期\r\n     * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\r\n     * @return day Number\r\n     * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\r\n     */\r\n    getTerm:function(y,n) {\r\n      if(y<1900 || y>2100) {return -1;}\r\n      if(n<1 || n>24) {return -1;}\r\n      var _table = calendar.sTermInfo[y-1900];\r\n      var _info = [\r\n        parseInt('0x'+_table.substr(0,5)).toString() ,\r\n        parseInt('0x'+_table.substr(5,5)).toString(),\r\n        parseInt('0x'+_table.substr(10,5)).toString(),\r\n        parseInt('0x'+_table.substr(15,5)).toString(),\r\n        parseInt('0x'+_table.substr(20,5)).toString(),\r\n        parseInt('0x'+_table.substr(25,5)).toString()\r\n      ];\r\n      var _calday = [\r\n        _info[0].substr(0,1),\r\n        _info[0].substr(1,2),\r\n        _info[0].substr(3,1),\r\n        _info[0].substr(4,2),\r\n        _info[1].substr(0,1),\r\n        _info[1].substr(1,2),\r\n        _info[1].substr(3,1),\r\n        _info[1].substr(4,2),\r\n        _info[2].substr(0,1),\r\n        _info[2].substr(1,2),\r\n        _info[2].substr(3,1),\r\n        _info[2].substr(4,2),\r\n        _info[3].substr(0,1),\r\n        _info[3].substr(1,2),\r\n        _info[3].substr(3,1),\r\n        _info[3].substr(4,2),\r\n        _info[4].substr(0,1),\r\n        _info[4].substr(1,2),\r\n        _info[4].substr(3,1),\r\n        _info[4].substr(4,2),\r\n        _info[5].substr(0,1),\r\n        _info[5].substr(1,2),\r\n        _info[5].substr(3,1),\r\n        _info[5].substr(4,2),\r\n      ];\r\n      return parseInt(_calday[n-1]);\r\n    },\r\n    /**\r\n     * 传入农历数字月份返回汉语通俗表示法\r\n     * @param lunar month\r\n     * @return Cn string\r\n     * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'\r\n     */\r\n    toChinaMonth:function(m) { // 月 => \\u6708\r\n      if(m>12 || m<1) {return -1} //若参数错误 返回-1\r\n      var s = calendar.nStr3[m-1];\r\n      s+= \"\\u6708\";//加上月字\r\n      return s;\r\n    },\r\n    /**\r\n     * 传入农历日期数字返回汉字表示法\r\n     * @param lunar day\r\n     * @return Cn string\r\n     * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'\r\n     */\r\n    toChinaDay:function(d){ //日 => \\u65e5\r\n      var s;\r\n      switch (d) {\r\n        case 10:\r\n        s = '\\u521d\\u5341'; break;\r\n      case 20:\r\n        s = '\\u4e8c\\u5341'; break;\r\n        break;\r\n      case 30:\r\n        s = '\\u4e09\\u5341'; break;\r\n        break;\r\n      default :\r\n        s = calendar.nStr2[Math.floor(d/10)];\r\n        s += calendar.nStr1[d%10];\r\n      }\r\n      return(s);\r\n    },\r\n    /**\r\n     * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\r\n     * @param y year\r\n     * @return Cn string\r\n     * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'\r\n     */\r\n    getAnimal: function(y) {\r\n      return calendar.Animals[(y - 4) % 12]\r\n    },\r\n    /**\r\n     * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\r\n     * @param y solar year\r\n     * @param m solar month\r\n     * @param d solar day\r\n     * @return JSON object\r\n     * @eg:console.log(calendar.solar2lunar(1987,11,01));\r\n     */\r\n    solar2lunar:function (y,m,d) { //参数区间1900.1.31~2100.12.31\r\n      if(y<1900 || y>2100) {return -1;}//年份限定、上限\r\n      if(y===1900&&m===1&&d<31) {return -1;}//下限\r\n      if(!y) { //未传参 获得当天\r\n        var objDate = new Date();\r\n      }else {\r\n        var objDate = new Date(y,parseInt(m)-1,d)\r\n      }\r\n      var i, leap=0, temp=0;\r\n      //修正ymd参数\r\n      var y = objDate.getFullYear(),m = objDate.getMonth()+1,d = objDate.getDate();\r\n      var offset  = (Date.UTC(objDate.getFullYear(),objDate.getMonth(),objDate.getDate()) - Date.UTC(1900,0,31))/86400000;\r\n      for(i=1900; i<2101 && offset>0; i++) { temp=calendar.lYearDays(i); offset-=temp; }\r\n      if(offset<0) { offset+=temp; i--; }\r\n      //是否今天\r\n      var isTodayObj = new Date(),isToday=false;\r\n      if(isTodayObj.getFullYear()===y && isTodayObj.getMonth()+1===m && isTodayObj.getDate()===d) {\r\n        isToday = true;\r\n      }\r\n      //星期几\r\n      var nWeek = objDate.getDay(),cWeek = calendar.nStr1[nWeek];\r\n      if(nWeek===0) {nWeek =7;}//数字表示周几顺应天朝周一开始的惯例\r\n      //农历年\r\n      var year = i;\r\n      var leap = calendar.leapMonth(i); //闰哪个月\r\n      var isLeap = false;\r\n      //效验闰月\r\n      for(i=1; i<13 && offset>0; i++) {\r\n        //闰月\r\n        if(leap>0 && i===(leap+1) && isLeap===false){\r\n          --i;\r\n          isLeap = true; temp = calendar.leapDays(year); //计算农历闰月天数\r\n        }\r\n        else{\r\n          temp = calendar.monthDays(year, i);//计算农历普通月天数\r\n        }\r\n        //解除闰月\r\n        if(isLeap===true && i===(leap+1)) { isLeap = false; }\r\n        offset -= temp;\r\n      }\r\n      if(offset===0 && leap>0 && i===leap+1)\r\n      if(isLeap){\r\n        isLeap = false;\r\n      }else{\r\n        isLeap = true; --i;\r\n      }\r\n      if(offset<0){ offset += temp; --i; }\r\n      //农历月\r\n      var month  = i;\r\n      //农历日\r\n      var day   = offset + 1;\r\n      //天干地支处理\r\n      var sm   =  m-1;\r\n      var gzY   =  calendar.toGanZhiYear(year);\r\n      //月柱 1900年1月小寒以前为 丙子月(60进制12)\r\n      var firstNode  = calendar.getTerm(year,(m*2-1));//返回当月「节」为几日开始\r\n      var secondNode = calendar.getTerm(year,(m*2));//返回当月「节」为几日开始\r\n      //依据12节气修正干支月\r\n      var gzM   =  calendar.toGanZhi((y-1900)*12+m+11);\r\n      if(d>=firstNode) {\r\n        gzM   =  calendar.toGanZhi((y-1900)*12+m+12);\r\n      }\r\n      //传入的日期的节气与否\r\n      var isTerm = false;\r\n      var Term  = null;\r\n      if(firstNode===d) {\r\n        isTerm = true;\r\n        Term  = calendar.solarTerm[m*2-2];\r\n      }\r\n      if(secondNode===d) {\r\n        isTerm = true;\r\n        Term  = calendar.solarTerm[m*2-1];\r\n      }\r\n      //日柱 当月一日与 1900/1/1 相差天数\r\n      var dayCyclical = Date.UTC(y,sm,1,0,0,0,0)/86400000+25567+10;\r\n      var gzD = calendar.toGanZhi(dayCyclical+d-1);\r\n      //该日期所属的星座\r\n      var astro = calendar.toAstro(m,d);\r\n      return {'lYear':year,'lMonth':month,'lDay':day,'Animal':calendar.getAnimal(year),'IMonthCn':(isLeap?\"\\u95f0\":'')+calendar.toChinaMonth(month),'IDayCn':calendar.toChinaDay(day),'cYear':y,'cMonth':m,'cDay':d,'gzYear':gzY,'gzMonth':gzM,'gzDay':gzD,'isToday':isToday,'isLeap':isLeap,'nWeek':nWeek,'ncWeek':\"\\u661f\\u671f\"+cWeek,'isTerm':isTerm,'Term':Term,'astro':astro};\r\n    },\r\n    /**\r\n     * 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\r\n     * @param y lunar year\r\n     * @param m lunar month\r\n     * @param d lunar day\r\n     * @param isLeapMonth lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]\r\n     * @return JSON object\r\n     * @eg:console.log(calendar.lunar2solar(1987,9,10));\r\n     */\r\n    lunar2solar:function(y,m,d,isLeapMonth) {  //参数区间1900.1.31~2100.12.1\r\n      var isLeapMonth = !!isLeapMonth;\r\n      var leapOffset = 0;\r\n      var leapMonth  = calendar.leapMonth(y);\r\n      var leapDay   = calendar.leapDays(y);\r\n      if(isLeapMonth&&(leapMonth!==m)) {return -1;}//传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同\r\n      if(y===2100&&m===12&&d>1 || y===1900&&m===1&&d<31) {return -1;}//超出了最大极限值\r\n      var day = calendar.monthDays(y,m);\r\n      var _day = day;\r\n      //bugFix 2016-9-25\r\n      //if month is leap, _day use leapDays method\r\n      if(isLeapMonth) {\r\n        _day = calendar.leapDays(y,m);\r\n      }\r\n      if(y < 1900 || y > 2100 || d > _day) {return -1;}//参数合法性效验\r\n      //计算农历的时间差\r\n      var offset = 0;\r\n      for(var i=1900;i<y;i++) {\r\n        offset+=calendar.lYearDays(i);\r\n      }\r\n      var leap = 0,isAdd= false;\r\n      for(var i=1;i<m;i++) {\r\n        leap = calendar.leapMonth(y);\r\n        if(!isAdd) {//处理闰月\r\n          if(leap<=i && leap>0) {\r\n            offset+=calendar.leapDays(y);isAdd = true;\r\n          }\r\n        }\r\n        offset+=calendar.monthDays(y,i);\r\n      }\r\n      //转换闰月农历 需补充该年闰月的前一个月的时差\r\n      if(isLeapMonth) {offset+=day;}\r\n      //1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)\r\n      var stmap  =  Date.UTC(1900,1,30,0,0,0);\r\n      var calObj =  new Date((offset+d-31)*86400000+stmap);\r\n      var cY   =  calObj.getUTCFullYear();\r\n      var cM   =  calObj.getUTCMonth()+1;\r\n      var cD   =  calObj.getUTCDate();\r\n      return calendar.solar2lunar(cY,cM,cD);\r\n    }\r\n  };\r\nexport default calendar.solar2lunar ","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./index.scss\";\r\n\r\nconst Weather = props => {\r\n\r\n    Weather.propTypes = {\r\n        date: PropTypes.object.isRequired,\r\n        isToday: PropTypes.bool.isRequired\r\n    }\r\n    const [date, setDate] = useState({});  // 日期\r\n    const [locationWeather, setLocationWeather] = useState({});  // 城市的天气数据\r\n\r\n\r\n    useEffect(() => {\r\n        getLocation();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setDate(props.date)\r\n    }, [props.date])\r\n\r\n    // 获取所在地\r\n    const getLocation = () => {\r\n        window.AMap.plugin('AMap.CitySearch', function () {\r\n            var citySearch = new window.AMap.CitySearch()\r\n            citySearch.getLocalCity(function (status, result) {\r\n                if (status === 'complete' && result.info === 'OK') {\r\n                    // 查询成功，result即为当前所在城市信息\r\n                    getWeather(result.adcode);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // 获取所在地天气\r\n    const getWeather = adcode => {\r\n        //加载天气查询插件\r\n        window.AMap.plugin('AMap.Weather', function () {\r\n            //创建天气查询实例\r\n            var weather = new window.AMap.Weather();\r\n            //执行实时天气信息查询\r\n            weather.getLive(adcode, function (err, data) {\r\n                if (err) return;\r\n                setLocationWeather(data);\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"weather\">\r\n            <div className=\"left\">\r\n                <p className=\"info_top\">{date.lunar ? date.lunar.slice(date.lunar.indexOf(\"农历\")) : \"\"}</p>\r\n                <p className=\"info_bottom\">{date.lunar ? date.lunar.slice(0, date.lunar.indexOf(\"农历\")) : \"\"}</p>\r\n            </div>\r\n            {\r\n                locationWeather.temperature && props.isToday\r\n                    ? (\r\n                        <div className=\"right\">\r\n                            <p className=\"info_top\">{`${locationWeather.temperature}℃ ${locationWeather.weather}`}</p>\r\n                            <p className=\"info_bottom\">{locationWeather.province} {locationWeather.city}</p>\r\n                        </div>\r\n                    )\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Weather;","import React, { useContext } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport \"./index.scss\";\r\nimport { ContextData } from \"../../useReducer\";\r\n\r\nconst DayMemo = props => {\r\n\r\n    DayMemo.propTypes = {\r\n        memos: PropTypes.array.isRequired\r\n    }\r\n\r\n    // 获取到useContext中存的值\r\n    const { state, dispatch } = useContext(ContextData);\r\n\r\n    return (\r\n        <div className=\"day_memo\">\r\n            {props.memos.map((item, index) => (\r\n                <div\r\n                    key={index}\r\n                    className={`item ${item.isFinished\r\n                        ? \"finished\"\r\n                        : \"\"}`}\r\n                >\r\n                    <div className=\"time\">\r\n                        <p className=\"start\">{\r\n                            `${new Date(item.dateStart).getHours()}:${new Date(item.dateStart).getMinutes()}`\r\n                        }</p>\r\n                        <p className=\"end\">{\r\n                            `${new Date(item.dateEnd).getHours()}:${new Date(item.dateEnd).getMinutes()}`\r\n                        }</p>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id={`checkbox${index}`}\r\n                            className=\"checkbox\"\r\n                            defaultChecked={item.isFinished}\r\n                            onChange={() => dispatch({ type: \"changeIsFinish\", data: { item } })}\r\n                        />\r\n                        <label className=\"text\" htmlFor={`checkbox${index}`}>{item.text}</label>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(DayMemo);","import React, { useState, useEffect, useContext } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './index.scss';\r\nimport { DatePicker, Button } from 'antd-mobile';\r\nimport GetLunarDay from \"../../utils/lunarCalendar\";  // 农历转换工具\r\nimport \"animate.css\";\r\nimport Weather from \"../weather\";                     // Weather组件\r\nimport DayMemo from \"../dayMemo\";                     // DayMemo组件\r\nimport { ContextData } from \"../../useReducer\";\r\n\r\n\r\nconst Calender = () => {\r\n\r\n\r\n    // 获取到useContext中存的值\r\n    const { state, dispatch } = useContext(ContextData);\r\n\r\n    const [itemsArr, setItemsArr] = useState(new Array(35));\r\n    const [year, setYear] = useState(new Date().getFullYear());           // 年\r\n    const [month, setMonth] = useState(new Date().getMonth() + 1);        // 月\r\n    const [day, setDay] = useState(new Date().getDate());                 // 日\r\n    const [week, setWeek] = useState(new Date().getDay());                // 周几\r\n    const [monthStartIndex, setMonthStartIndex] = useState(0);            // 本月第一天是在itemsArr的下标值\r\n    const [selectDay, setSelectDay] = useState(day);                      // 当前选中的日\r\n    const [isShow, setIsShow] = useState(true);                           // 日历表格是否显示\r\n    const [animateState, setAnimateState] = useState(0);                  // 日历动画的状态,0,1,2三种过渡动画\r\n    const [resultDate, setResultDate] = useState({});                     // 最终整合版日期\r\n    const [memoArr, setMemoArr] = useState([]);                            // 几号的备忘录在itemArr中的下标值\r\n\r\n    let weeks = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"];\r\n    let monthDays = new Date(year, month, 0).getDate();                 // 本月有多少天\r\n    let lastMonthDays = new Date(year, month - 1, 0).getDate();         // 上个月有多少天\r\n    let weekStart = new Date(year, month - 1, 1).getDay();              // 本月第一天是周几\r\n\r\n\r\n    useEffect(() => {\r\n        fillDate();\r\n        showLunarDay();\r\n        changeItemH();\r\n        setSelectDay(day);\r\n\r\n    }, [year, month, day]);\r\n\r\n\r\n    // 当每月的开始的下标值变化了说明日期变化了，农历也跟着变化\r\n    useEffect(() => {\r\n        showLunarDay();\r\n        findMark();\r\n    }, [monthStartIndex])\r\n\r\n\r\n    // 当isShow改变时，把isShow变成true，实现动画效果\r\n    useEffect(() => {\r\n        setIsShow(true);\r\n    }, [isShow])\r\n\r\n    // 更新resultDate数据\r\n    useEffect(() => {\r\n        setResultDate(Object.assign(\r\n            { ...itemsArr[selectDay + monthStartIndex - 1] },\r\n            {\r\n                solar: `${year}年${month}月${selectDay}日${weeks[week]}`,\r\n                times: new Date(year, month - 1, selectDay).getTime()\r\n            }\r\n        ))\r\n        howMuchMemo()\r\n    }, [year, month, selectDay, monthStartIndex]);\r\n\r\n    // 向useReducer传递日期数据\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"updateDate\",\r\n            data: resultDate\r\n        })\r\n    }, [resultDate])\r\n\r\n\r\n    // 改变元素的高度和宽度一致\r\n    const changeItemH = () => {\r\n        setTimeout(() => {\r\n            const items = Array.from(document.getElementsByClassName(\"item\"));\r\n            const itemW = window.getComputedStyle(items[0]).width;\r\n            items.forEach(el => {\r\n                el.style.height = itemW;\r\n            })\r\n        }, 50)\r\n    }\r\n\r\n    // 遍历数据找到在本月的时间的备忘录的下标值\r\n    const findMark = () => {\r\n        let arr = [];\r\n        state.memoData.forEach(item => {\r\n            let itemYear = new Date(item.dateStart).getFullYear();\r\n            let itemMonth = new Date(item.dateStart).getMonth() + 1;\r\n            let itemDay = new Date(item.dateStart).getDate();\r\n            if (itemYear === year && itemMonth === month) {\r\n                try {\r\n                    itemsArr.forEach((dayItem, i) => {\r\n                        if (i >= monthStartIndex && dayItem.solar === itemDay) {\r\n                            arr.push(i);\r\n                            throw new Error(\"EndIterative\");\r\n                        }\r\n                    })\r\n                } catch (e) {\r\n                    if (e.message !== \"EndIterative\") throw e;\r\n                }\r\n\r\n            }\r\n        })\r\n        setMemoArr(arr);\r\n    }\r\n\r\n    // 把日期填充进数组\r\n    const fillDate = () => {\r\n        // 将\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"填充到数组的头部\r\n        itemsArr.unshift(...[\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"]);\r\n        // 这个月天数遍历\r\n        for (let i = 1; i <= monthDays; i++) {\r\n            itemsArr[7 + weekStart + i - 1] = { solar: i }\r\n        }\r\n        // 上个月天数遍历\r\n        let j = 0;\r\n        for (let i = weekStart - 1; i >= 0; i--) {\r\n            itemsArr[7 + i] = { solar: lastMonthDays - j };\r\n            j++;\r\n        }\r\n        // 计算出本月第一天是在itemsArr的下标值\r\n\r\n        let nowMonthStartIndex = 0;\r\n        for (let i = 0; i < itemsArr.length; i++) {\r\n            if (i > 6 && itemsArr[i].solar === 1) {\r\n                nowMonthStartIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // 填充下个月\r\n        if (itemsArr.length % 7 !== 0 || itemsArr.includes(undefined)) {\r\n            let k = 1;\r\n            // 下个月开始的位置\r\n            let nextMonthStartIndex = nowMonthStartIndex + monthDays;\r\n            // 下个月的出现的天数\r\n            let nextMonthLength = itemsArr.length % 7 !== 0\r\n                ? 7 - itemsArr.length % 7\r\n                : itemsArr.length - nextMonthStartIndex;\r\n            for (let i = 0; i < nextMonthLength; i++) {\r\n                itemsArr[i + nextMonthStartIndex] = { solar: k };\r\n                k++;\r\n            }\r\n        }\r\n\r\n        setItemsArr([...itemsArr]);\r\n        setMonthStartIndex(nowMonthStartIndex);\r\n    }\r\n\r\n    // 判断是否是今天\r\n    const isToday = num => {\r\n        let isNowYear = new Date().getFullYear() === year ? true : false;\r\n        let isNowMonth = new Date().getMonth() + 1 === month ? true : false;\r\n        let isNowDay = new Date().getDate() === num ? true : false;\r\n        return isNowYear && isNowMonth && isNowDay;\r\n    }\r\n\r\n    // 选择多少号\r\n    const selectMonthDay = index => {\r\n        if (index >= monthStartIndex && index < monthStartIndex + monthDays) {\r\n            setSelectDay(index - monthStartIndex + 1);\r\n            setWeek(new Date(year, month - 1, index - monthStartIndex + 1).getDay());\r\n        }\r\n    }\r\n\r\n    // 选择日期\r\n    const changeDate = date => {\r\n        setYear(date.getFullYear());\r\n        setMonth(date.getMonth() + 1);\r\n        setDay(date.getDate());\r\n        setWeek(date.getDay());\r\n        setItemsArr(new Array(35));\r\n        setAnimateState(0)\r\n    }\r\n\r\n    // 判断是几月份\r\n    const diffMonth = index => {\r\n        if (index >= monthStartIndex && index < monthStartIndex + monthDays) {\r\n            return month;\r\n        } else if (index > 6 && monthStartIndex > index) {\r\n            return month - 1;\r\n        } else if (index >= monthStartIndex + monthDays) {\r\n            return month + 1;\r\n        }\r\n    }\r\n\r\n    // 把农历传入到itemsArr数组中\r\n    const showLunarDay = () => {\r\n        itemsArr.forEach((item, index) => {\r\n            if (index > 6) {\r\n                let readyMonth = diffMonth(index);\r\n                let resultObj = GetLunarDay(year, readyMonth, item.solar);\r\n                item.lunar = `${resultObj.gzYear}${resultObj.Animal}年 ${resultObj.gzMonth}月 ${resultObj.gzDay}日 农历${resultObj.IMonthCn}${resultObj.IDayCn}`\r\n            }\r\n        })\r\n        setItemsArr([...itemsArr]);\r\n    }\r\n\r\n    // 只要最后两个农历初几\r\n    const sliceLunar = item => {\r\n        if (!item) return \"\";\r\n        let i = item.lastIndexOf(\"月\");\r\n        item = item.slice(i + 1);\r\n        return item;\r\n    }\r\n\r\n    // 切换到上个月或下个月\r\n    const changeMonth = type => {\r\n        let newMonth = type === \"left\" ? month - 1 : month + 1;\r\n        let newYear = year;\r\n        /**\r\n         * 如果月份大于12，年份加一年，月份改为1\r\n         * 如果月份小于1，年份减一年，月份改为12\r\n         */\r\n        if (newMonth > 12) {\r\n            newYear++;\r\n            newMonth = 1;\r\n        } else if (newMonth < 1) {\r\n            newYear--;\r\n            newMonth = 12;\r\n        }\r\n        type === \"left\" ? setAnimateState(1) : setAnimateState(2);\r\n        setIsShow(!isShow);\r\n        setYear(newYear);\r\n        setMonth(newMonth);\r\n        setDay(1);\r\n        setWeek(new Date(newYear, newMonth - 1, 1).getDay());\r\n        setItemsArr(new Array(35));\r\n    }\r\n\r\n    // 该天有多少备忘录\r\n    const howMuchMemo = () => {\r\n        // 当前选择日子在itemsArr中的下标值\r\n        let i = selectDay + monthStartIndex - 1;\r\n        if (!memoArr.includes(i)) return [];\r\n        let arr = state.memoData.filter(item => {\r\n            let itemDate = new Date(item.dateStart);\r\n            if (itemDate.getFullYear() === year && itemDate.getMonth() + 1 === month && itemDate.getDate() === selectDay) {\r\n                return item;\r\n            }\r\n        })\r\n        // console.log(arr);\r\n        return arr;\r\n    }\r\n\r\n    return (\r\n        <div className=\"calender\">\r\n            {/* 头部 */}\r\n            <header className=\"calender_header\">\r\n                {/* 上个月按钮 */}\r\n                <Button\r\n                    icon=\"left\"\r\n                    size=\"small\"\r\n                    inline={true}\r\n                    style={{ backgroundColor: \"#ffc55a\", color: \"#fff\" }}\r\n                    onClick={() => changeMonth(\"left\")}\r\n                />\r\n\r\n                {/* 日期 */}\r\n                <div className=\"date\">\r\n                    <DatePicker\r\n                        mode=\"date\"\r\n                        value={new Date(year, month - 1, day)}\r\n                        onChange={date => changeDate(date)}\r\n                    >\r\n                        <div>\r\n                            <span>{year}年{month}月</span>\r\n                            <span className=\"week\">{weeks[week]}</span>\r\n                        </div>\r\n                    </DatePicker>\r\n                </div>\r\n                {/* 下个月按钮 */}\r\n                <Button\r\n                    icon=\"right\"\r\n                    size=\"small\"\r\n                    inline={true}\r\n                    style={{ backgroundColor: \"#ffc55a\", color: \"#fff\" }}\r\n                    onClick={() => changeMonth(\"right\")}\r\n                />\r\n            </header>\r\n\r\n            {/* 主要部分 */}\r\n            <main\r\n                className={`clender_main animate__animated ${\r\n                    animateState === 0\r\n                        ? \"animate__flipInX\"\r\n                        : animateState === 1\r\n                            ? \"animate__lightSpeedInLeft\"\r\n                            : \"animate__lightSpeedInRight\"\r\n                    }`\r\n                }\r\n                style={{ display: isShow ? \"grid\" : \"none\" }}\r\n            >\r\n                {\r\n                    itemsArr.map((item, index) => (\r\n                        <div\r\n                            onClick={() => selectMonthDay(index)}\r\n                            className={\r\n                                // 区分 表头和表格\r\n                                `animate__animated ${\r\n                                index > 6\r\n                                    ? \"item\"\r\n                                    : \"grid_header\"\r\n                                } ${\r\n                                // 区分本月和其他月\r\n                                index >= monthStartIndex && index < monthStartIndex + monthDays\r\n                                    ? \"currentMonth\"\r\n                                    : \"othersMonth\"\r\n                                } ${\r\n                                // 区分是不是已选中，再判断是不是今天\r\n                                selectDay === index - monthStartIndex + 1 && index >= monthStartIndex && index < monthStartIndex + monthDays\r\n                                    ? isToday(item.solar)\r\n                                        ? \"today animate__rubberBand\"\r\n                                        : \"selectDay animate__rubberBand\"\r\n                                    : \"\"\r\n                                } ${\r\n                                // 判断是否有备忘录\r\n                                memoArr.includes(index)\r\n                                    ? \"existMemo\"\r\n                                    : \"\"\r\n\r\n                                }`\r\n\r\n                            }\r\n                            key={index}\r\n                        >\r\n                            {index > 6 ? item.solar : item}\r\n                            <p className=\"lunar\">{index > 6 ? sliceLunar(item.lunar) : \"\"}</p>\r\n\r\n                        </div>)\r\n                    )\r\n                }\r\n            </main>\r\n\r\n            {/* 天气和农历 */}\r\n            <Weather date={resultDate} isToday={isToday(selectDay)} />\r\n\r\n            {/* 当天的备忘录 */}\r\n            {\r\n                memoArr.includes(selectDay + monthStartIndex - 1)\r\n                    ? (<DayMemo memos={howMuchMemo()} />)\r\n                    : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Calender);","import React, { useEffect, useState } from 'react';\r\nimport \"./index.scss\";\r\nimport { WingBlank } from 'antd-mobile';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faBookmark } from '@fortawesome/fontawesome-free-solid';\r\n\r\n\r\nconst Footer = () => {\r\n    const [locationPath, setLocationPath] = useState(\"/\");  //当前路径\r\n    const lists = [\r\n        {\r\n            path: \"/home\",\r\n            icon: faHome,\r\n            text: \"首页\"\r\n        },\r\n        {\r\n            path: \"/memo\",\r\n            icon: faBookmark,\r\n            text: \"备忘录\"\r\n        }\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        setLocationPath(window.location.pathname);\r\n    }, [])\r\n\r\n    // 跳转页面\r\n    const jumpPage = path => {\r\n        window.location.href = window.location.origin + path;\r\n        setLocationPath(path);\r\n    }\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            {/* 添加按钮  只在home路由中显示 */}\r\n            <div className=\"add_btn\">\r\n                <div\r\n                    className=\"btn\"\r\n                    onClick={() => jumpPage(\"/addmemo\")}\r\n                ></div>\r\n            </div>\r\n\r\n            {/* 标签栏 */}\r\n            <WingBlank>\r\n                <ul className=\"lists\">\r\n                    {lists.map((item, index) => (\r\n                        <li\r\n                            key={index}\r\n                            className={`lists_item ${\r\n                                locationPath === item.path\r\n                                    ? \"selected\"\r\n                                    : \"\"\r\n                                }`}\r\n                            onClick={() => jumpPage(item.path)}\r\n                        >\r\n                            <FontAwesomeIcon className=\"icon\" icon={item.icon} />\r\n                            <p>{item.text}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </WingBlank>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { useContext, useEffect, useState, memo } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Toast, Modal } from \"antd-mobile\";\r\nimport \"./index.scss\";\r\nimport { ContextData } from \"../../useReducer\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/fontawesome-free-solid';\r\n\r\nconst alert = Modal.alert;\r\n\r\nconst MemoItem = props => {\r\n\r\n    MemoItem.propTypes = {\r\n        memoData: PropTypes.array.isRequired,   // 备忘录数据\r\n    }\r\n\r\n    // 获取到useContext中存的值\r\n    const { state, dispatch } = useContext(ContextData);\r\n\r\n    const [isShow, setIsShow] = useState(false);       // 是否加载\r\n    const [memoData, setMemoData] = useState(props.memoData);\r\n\r\n    useEffect(() => {\r\n        sortMemoData();\r\n        // console.log(state.icons[0])\r\n    }, []);\r\n\r\n    /**\r\n     * 按日期将备忘录进行分组   \r\n     * 1. 冒泡排序  \r\n     * 2. 然后递归把同一年月日的备忘录给整合起来，形成二维数组，例如：[{},[{},{}],{}]\r\n     */\r\n    const sortMemoData = () => {\r\n        // 冒泡排序  \r\n        for (let i = 0; i < memoData.length - 1; i++) {\r\n            memoData.forEach((item, index) => {\r\n                if (index < memoData.length - 1) {\r\n                    let itemTimes = new Date(item.year, item.month, item.day).getTime();\r\n                    let itemAfterTimes = new Date(memoData[index + 1].year, memoData[index + 1].month, memoData[index + 1].day).getTime();\r\n                    if (itemTimes > itemAfterTimes) {\r\n                        let middle = memoData[index + 1];\r\n                        memoData[index + 1] = item;\r\n                        memoData[index] = middle;\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        // 冒泡排序是从小到大，在反转一下，成为从大到小\r\n        memoData.reverse();\r\n        let newMemoData = categoiresMemoData(memoData);\r\n        setMemoData(newMemoData);\r\n        setIsShow(true);\r\n    }\r\n\r\n    // 循环递归把同一年月日的备忘录给整合起来，形成二维数组，例如：[{},[{},{}],{}]\r\n    const categoiresMemoData = (memoData) => {\r\n        let newMemoData = [];\r\n        let i = 0;   // 从哪一位开始循环\r\n        for (let j = 0; j < memoData.length; j++) {\r\n            if (j >= i) {\r\n                let newItem = _categoiresMemoData(memoData[j], j);\r\n                newMemoData.push(newItem);\r\n            }\r\n        }\r\n        // 递归\r\n        function _categoiresMemoData(item, index) {\r\n            i++;\r\n            // 当传进来的是数组中最后一个元素的话，直接返回\r\n            if (index > memoData.length - 2) {\r\n                return [item];\r\n            }\r\n            // 该元素日期的毫秒数\r\n            let itemTimes = new Date(item.year, item.month, item.day).getTime();\r\n            // 该元素的下一个元素日期的毫秒数\r\n            let itemAfterTimes = new Date(memoData[index + 1].year, memoData[index + 1].month, memoData[index + 1].day).getTime();\r\n            // 如果该元素和下一个元素的毫秒数相等，递归下个元素；不相等的话，直接返回该元素\r\n            if (itemTimes === itemAfterTimes) {\r\n                return [item, ..._categoiresMemoData(memoData[index + 1], index + 1)];\r\n            } else {\r\n                return [item];\r\n            }\r\n        }\r\n        return newMemoData;\r\n    }\r\n\r\n    // 派发useReducer事件，改变state.memoData中的isFinished\r\n    const changeMemo = data => {\r\n        dispatch({ type: \"changeIsFinish\", data: { item: data } });\r\n    }\r\n\r\n    // 派发useReducer事件，删除该元素  data:该元素  index该元素在父数组中的位置，_index该元素在该数组中的位置\r\n    const deleteMemo = (data, index, _index) => {\r\n        dispatch({ type: \"deleteMemoItem\", data: { item: data } });\r\n        memoData[index].splice(_index, 1);\r\n        setIsShow(false);\r\n        setMemoData(memoData);\r\n        setTimeout(()=>setIsShow(true),0)\r\n        Toast.success(\"删除成功\", 1);\r\n    }\r\n\r\n    // 派发useReducer事件，删除所有已完成的备忘录\r\n    const clearAllDone = () => {\r\n        dispatch({ type: \"deleteAllDone\" });\r\n        let arr = state.memoData.filter(item => {\r\n            return item.isFinished === true;\r\n        })\r\n        arr.forEach(arrItem => {\r\n            memoData.forEach((memoDataItem, index) => {\r\n                if (arrItem.id === memoDataItem.id) {\r\n                    memoData.splice(index, 1);\r\n                    return;\r\n                }\r\n                if (memoDataItem.length > 0) {\r\n                    memoDataItem.forEach((_memoDataItem, _index) => {\r\n                        if (arrItem.id === _memoDataItem.id) {\r\n                            memoData[index].splice(_index, 1);\r\n                            return;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        setIsShow(false);\r\n        setMemoData(memoData);\r\n        setTimeout(()=>setIsShow(true),0)\r\n        Toast.success(\"删除成功\", 1);\r\n    }\r\n\r\n    // 格式化开始时间和结束时间\r\n    const formatDate = data => {\r\n        let dateStart = new Date(data.dateStart);\r\n        let dateEnd = new Date(data.dateEnd);\r\n        // 开始时间的小时和分钟\r\n        let dateStartHours = dateStart.getHours();\r\n        let dateStartMinutes = dateStart.getMinutes().toString().padStart(2, \"0\");\r\n        // 结束时间的小时和分钟\r\n        let dateEndtHours = dateEnd.getHours();\r\n        let dateEndtMinutes = dateEnd.getMinutes().toString().padStart(2, \"0\");\r\n        return `${dateStartHours}:${dateStartMinutes}-${dateEndtHours}:${dateEndtMinutes}`;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"memoItem_wrap\">\r\n            {/* 清除已完成的备忘录 */}\r\n            <p\r\n                className=\"clear_done\"\r\n                onClick={() =>\r\n                    alert('删除', '你确定删除所有已完成的备忘录？', [\r\n                        {\r\n                            text: '确定',\r\n                            onPress: () => clearAllDone()\r\n                        },\r\n                        { text: '取消', onPress: () => Toast.info('已取消', 1) },\r\n\r\n                    ])\r\n                }\r\n            >清除已完成</p>\r\n\r\n            {/* 第一次遍历各个日期的备忘录 */}\r\n            {isShow && memoData.map((item, index) => (\r\n                item.length > 0\r\n                    ? (<li key={index}>\r\n                        {/* 日期 */}\r\n                        <h1>{`${item[0].year}-${item[0].month}-${item[0].day}`}</h1>\r\n                        {/* 第二次遍历该日期下的备忘录 */}\r\n                        {item.map((_item, _index) => (\r\n                            <div key={_index}\r\n                                className={`memo_item ${\r\n                                    _item.isFinished\r\n                                        ? \"finished\"\r\n                                        : \"\"}`}\r\n                            >\r\n                                {/* 复选框 */}\r\n                                <div className=\"input_wrap\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={`checkbox${_item.id}`}\r\n                                        className=\"checkbox\"\r\n                                        defaultChecked={_item.isFinished}\r\n                                        onChange={() => changeMemo(_item)}\r\n                                    />\r\n                                    {/* 图标 */}\r\n                                    <FontAwesomeIcon\r\n                                        icon={state.icons[_item.tagIndex].icon}\r\n                                        className=\"icon\"\r\n                                    />\r\n                                    <label className=\"text\" htmlFor={`checkbox${_item.id}`}>{_item.text}</label>\r\n                                </div>\r\n                                {/* 时间 */}\r\n                                <p className=\"date\">\r\n                                    {formatDate(_item)}\r\n                                </p>\r\n                                {/* 删除 */}\r\n                                <FontAwesomeIcon\r\n                                    icon={faTrash}\r\n                                    className=\"delete_btn\"\r\n                                    onClick={() =>\r\n                                        alert('删除', '你确定删除该备忘录？', [\r\n                                            {\r\n                                                text: '确定',\r\n                                                onPress: () => deleteMemo(_item, index, _index)\r\n                                            },\r\n                                            { text: '取消', onPress: () => Toast.info('已取消', 1) },\r\n\r\n                                        ])\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </li>)\r\n                    : \"\"\r\n            ))}\r\n\r\n        </ul>\r\n    )\r\n}\r\nexport default MemoItem;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Tabs, NavBar, Icon } from \"antd-mobile\";\r\nimport \"./index.scss\";\r\nimport { ContextData } from \"../../useReducer\";\r\nimport MemoItem from \"../../components/memoItem\";\r\n\r\nconst Memo = props => {\r\n\r\n    // 获取到useContext中存的值\r\n    const { state, dispatch } = useContext(ContextData);\r\n\r\n    // const [undoneMemos, setUndoneMemos] = useState(state.memoData);\r\n    // const [doneMemos, setDoneMemos] = useState(state.memoData);\r\n\r\n\r\n    // const tabs = [\r\n    //     { title: '全部', sub: '1' },\r\n    //     { title: '未完成', sub: '2' },\r\n    //     { title: '已完成', sub: '3' },\r\n    // ];\r\n\r\n    // useEffect(() => {\r\n    //     getUndoneMemos();\r\n    // }, [state])\r\n\r\n\r\n    // 未完成的备忘录\r\n    // const getUndoneMemos = () => {\r\n    //     // let dataArr = undoneMemos;\r\n    //     let arr = state.memoData.filter(item => item.isFinished === false);\r\n    //     // setUndoneMemos(arr);\r\n    //     return arr;\r\n    // }\r\n\r\n    // 已完成的备忘录\r\n    // const getDoneMemos = () => {\r\n    //     let arr = state.memoData.filter(item => item.isFinished === true);\r\n    //     return arr;\r\n    // }\r\n\r\n    return (\r\n        <div className=\"memo\">\r\n            {/* 头部 */}\r\n            <NavBar\r\n                mode=\"light\"\r\n                className=\"nav_bar\"\r\n                icon={<Icon type=\"left\" />}\r\n                onLeftClick={() => props.history.push(\"/\")}\r\n            >备忘录</NavBar>\r\n            <div className=\"tab_content\">\r\n                <MemoItem memoData={state.memoData} />\r\n            </div>\r\n            {/* 标签栏 */}\r\n            {/* <Tabs tabs={tabs}\r\n                initialPage={0}\r\n                tabBarPosition=\"top\"\r\n                renderTab={tab => <span>{tab.title}</span>}\r\n            >\r\n\r\n                <div className=\"tab_content\">\r\n                    <MemoItem memoData={getUndoneMemos()} />\r\n                </div>\r\n                <div className=\"tab_content\">\r\n                    <MemoItem memoData={getDoneMemos()} />\r\n                </div>\r\n            </Tabs> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Memo;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { WingBlank, InputItem, DatePicker, List, Toast, Button } from 'antd-mobile';\r\nimport \"animate.css\";\r\nimport \"./index.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ContextData } from \"../../useReducer\";\r\n\r\nconst AddMemo = props => {\r\n    // 获取到useContext中存的值\r\n    const { state, dispatch } = useContext(ContextData);\r\n\r\n    // const [date, setDate] = useState({});\r\n    const [dateStart, setDateStart] = useState(new Date());  // 开始时间\r\n    const [dateEnd, setDateEnd] = useState(dateStart);     // 结束时间\r\n    const [selectedIndex, setSelectedIndex] = useState(0);  // 日期\r\n    const [inputVal, setInputVal] = useState(\"\");           // 备注信息\r\n\r\n\r\n    useEffect(() => {\r\n        initDateEnd();\r\n    }, [])\r\n\r\n\r\n    // 初始化结束时间\r\n    const initDateEnd = () => {\r\n        if (dateStart.getHours() >= 23) return;\r\n        let hour_millisecond = 1000 * 60 * 60; // 一个小时的毫秒数\r\n        let times = new Date().getTime();\r\n        let result = times + hour_millisecond;\r\n        setDateEnd(new Date(result))\r\n    }\r\n\r\n    /**\r\n     * 改变时间 \r\n     * @param {*} date  开始或结束时间\r\n     * @param {*} flag  为true改变开始时间；false改变结束时间\r\n     * 当flag为true时，如果开始时间大于结束时间，开始时间等于结束时间\r\n     * 当flag为false时，如果结束时间小于于开始时间，结束时间等于开始时间\r\n     */\r\n    const changeDate = (date, flag) => {\r\n        let dateStartTimes = new Date(dateStart).getTime(); // 开始时间的毫秒数\r\n        let dateEndTimes = new Date(dateEnd).getTime();  // 结束时间的毫秒数\r\n        if (flag) {\r\n            dateStartTimes = new Date(date).getTime();\r\n            if (dateStartTimes < dateEndTimes) {\r\n                setDateStart(date);\r\n            } else {\r\n                if (new Date(date).getHours() < 23) {\r\n                    let hourTimes = 1000 * 60 * 60;\r\n                    setDateStart(date);\r\n                    setDateEnd(new Date(dateStartTimes + hourTimes))\r\n                } else {\r\n                    setDateStart(date);\r\n                    setDateEnd(new Date(0, 0, 0, 23, 59))\r\n                }\r\n\r\n            }\r\n        } else {\r\n            dateEndTimes = new Date(date).getTime();\r\n            dateStartTimes < dateEndTimes\r\n                ? setDateEnd(date)\r\n                : setDateEnd(dateStart)\r\n        }\r\n    }\r\n\r\n    // input改变\r\n    const changeInputVal = val => {\r\n        if (val.length < 16) {\r\n            setInputVal(val);\r\n        } else {\r\n            Toast.info(\"备注信息不能超过15个字数\")\r\n        }\r\n    }\r\n\r\n    // 提交数据\r\n    const addData = () => {\r\n        // 将 localStorage中的selectedDate的选中日期的毫秒数times转换成正常日期\r\n        let _date = new Date(state.selectedDate.times);\r\n        let year = _date.getFullYear();\r\n        let month = _date.getMonth();\r\n        let day = _date.getDate();\r\n        let reg = /^\\s+$/;\r\n        if (inputVal === \"\" || reg.test(inputVal)) {\r\n            Toast.info(\"请填写备注\")\r\n            return;\r\n        }\r\n        let newItem = {\r\n            id: new Date().getTime(),    // id值\r\n            isFinished: false,           // 是否完成 \r\n            tagIndex: selectedIndex,\r\n            dateStart: new Date(year, month, day, dateStart.getHours(), dateStart.getMinutes()),\r\n            dateEnd: new Date(year, month, day, dateEnd.getHours(), dateEnd.getMinutes()),\r\n            text: inputVal,\r\n            year,\r\n            month: month + 1,\r\n            day\r\n        };\r\n        dispatch({\r\n            type: \"add\",\r\n            data: newItem\r\n        });\r\n        props.history.push(\"/\");\r\n        Toast.success(\"新建备忘录成功\", 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"add_memo\">\r\n            <div className=\"animate__animated animate__zoomInUp container\">\r\n                <WingBlank>\r\n                    {/* 头部 */}\r\n                    <section className=\"memo_header\">\r\n                        <p className=\"title\">创建备忘录</p>\r\n                        {/* 图标 */}\r\n                        <div className=\"icons\">\r\n                            {state.icons.map((item, index) => (\r\n                                <div key={index}\r\n                                    className={selectedIndex === index\r\n                                        ? \"selected\"\r\n                                        : \"\"\r\n                                    }\r\n                                    onClick={() => setSelectedIndex(index)}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        className=\"icon_item \"\r\n                                        icon={item.icon}\r\n                                    />\r\n                                    <p className=\"text\">{item.text}</p>\r\n                                </div>\r\n\r\n                            ))}\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/* 主体部分 */}\r\n                    <section className=\"memo_main\">\r\n                        <InputItem\r\n                            type=\"text\"\r\n                            value={inputVal}\r\n                            onChange={val => changeInputVal(val)}\r\n                            className=\"mark\"\r\n                            placeholder=\"请输入备注\"\r\n                        />\r\n                        {/* 列表 */}\r\n                        <List>\r\n                            {/* 开始时间 */}\r\n                            <DatePicker\r\n                                mode=\"time\"\r\n                                value={dateStart}\r\n                                onChange={date => changeDate(date, true)}\r\n                            >\r\n                                <List.Item arrow=\"horizontal\">开始时间</List.Item>\r\n                            </DatePicker>\r\n\r\n                            {/* 结束时间 */}\r\n                            <DatePicker\r\n                                mode=\"time\"\r\n                                value={dateEnd}\r\n                                onChange={date => changeDate(date, false)}\r\n                            >\r\n                                <List.Item arrow=\"horizontal\">结束时间</List.Item>\r\n                            </DatePicker>\r\n\r\n                            {/* 确认按钮 */}\r\n                            <List.Item>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={() => addData()}\r\n                                >确认</Button>\r\n                            </List.Item>\r\n\r\n                            {/* 返回首页按钮 */}\r\n                            <List.Item>\r\n                                <Button\r\n                                    type=\"warning\"\r\n                                    onClick={() => {\r\n                                        props.history.push(\"/\");\r\n                                        Toast.success(\"返回首页成功\", 1)\r\n                                    }}\r\n                                >返回首页</Button>\r\n                            </List.Item>\r\n\r\n                        </List>\r\n\r\n                    </section>\r\n                </WingBlank>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddMemo;","import React, { useEffect, useState, useReducer } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport './index.scss';\nimport { WingBlank } from 'antd-mobile';\nimport { reducer, ContextData, initData } from \"../../useReducer\" //引入useReducer文件\nimport Calender from \"../../components/calendar\";  // 日历组件\nimport DiyFooter from \"../../components/footer\";   // 底部组件\nimport Memo from \"../../views/memo\";      // 待办\nimport AddMemo from \"../../views/addMemo\";      // 添加备忘录\n\nfunction App() {\n\n  //  获取是state和dispatch \n  const [state, dispatch] = useReducer(reducer, initData);\n\n  return (\n    // 获取到useContext中存的值\n    <ContextData.Provider value={{\n      state,\n      dispatch // 把 dispatch 也作为 context 的一部分共享下去，从而在嵌套组件中调用以实现更新顶层的 state\n    }}>\n      <div className=\"App\">\n        <WingBlank>\n          <header className=\"header\">\n            <h1 className=\"title\">\n              橙子\n          <img src={require(\"../../common/images/orange.png\")} width=\"40px\" alt=\"logo\" />\n          日历\n          </h1>\n          </header>\n          <Router>\n            <Switch>\n\n              <Route exact path=\"/home\" component={Calender} />\n\n              <Route path=\"/memo\" component={Memo} />\n\n              <Route path=\"/addmemo\" component={AddMemo} />\n\n              <Redirect from='/' to='/home'></Redirect>\n            </Switch>\n          </Router>\n\n          {/* 底部组件 */}\n          <DiyFooter />\n\n        </WingBlank>\n      </div>\n    </ContextData.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/app';\nimport \"../src/common/styles/reset.css\"\nimport 'antd-mobile/dist/antd-mobile.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}